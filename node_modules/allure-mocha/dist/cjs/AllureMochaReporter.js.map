{"version":3,"file":"AllureMochaReporter.js","names":["Mocha","_interopRequireWildcard","require","_allureJsCommons","_sdk","_reporter","_runtime","_MochaTestRuntime","_legacyUtils","_utils","_excluded","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","ownKeys","keys","getOwnPropertySymbols","o","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","_objectWithoutPropertiesLoose","indexOf","propertyIsEnumerable","_toPropertyKey","value","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","EVENT_SUITE_BEGIN","EVENT_SUITE_END","EVENT_TEST_BEGIN","EVENT_TEST_END","EVENT_TEST_PASS","EVENT_TEST_FAIL","EVENT_TEST_PENDING","EVENT_HOOK_BEGIN","EVENT_HOOK_END","Runner","constants","AllureMochaReporter","reporters","Base","constructor","runner","opts","on","onSuite","onSuiteEnd","onTest","onPassed","onFailed","onPending","onTestEnd","onHookStart","onHookEnd","runtime","startScope","writeScope","test","fullName","globalLabels","getEnvironmentLabels","label","initialLabels","getInitialLabels","labels","concat","file","testPath","getRelativePath","packageLabelFromPath","getPackageLabelFromPath","titlePath","join","startTest","name","title","stage","Stage","RUNNING","dedicatedScope","updateTest","status","Status","PASSED","_","error","getStatusFromError","statusDetails","message","trace","stack","SKIPPED","defaultSuites","getSuitesOfMochaTest","ensureSuiteLabels","FINISHED","stopTest","writeTest","hook","_hook$originalTitle","originalTitle","startsWith","startFixture","hasFixture","updateFixture","stopFixture","_ref","reporterOptions","resultsDir","writer","restOptions","ReporterRuntime","FileSystemWriter","testRuntime","MochaTestRuntime","setGlobalTestRuntime","setLegacyApiRuntime","parallel","_opts$require","resolveParallelModeSetupFile","applyListeners","exports"],"sources":["../../src/AllureMochaReporter.ts"],"sourcesContent":["import * as Mocha from \"mocha\";\nimport type { Label } from \"allure-js-commons\";\nimport { Stage, Status } from \"allure-js-commons\";\nimport { getStatusFromError } from \"allure-js-commons/sdk\";\nimport type { Config } from \"allure-js-commons/sdk/reporter\";\nimport {\n  FileSystemWriter,\n  ReporterRuntime,\n  ensureSuiteLabels,\n  getEnvironmentLabels,\n  getPackageLabelFromPath,\n  getRelativePath,\n} from \"allure-js-commons/sdk/reporter\";\nimport { setGlobalTestRuntime } from \"allure-js-commons/sdk/runtime\";\nimport { MochaTestRuntime } from \"./MochaTestRuntime.js\";\nimport { setLegacyApiRuntime } from \"./legacyUtils.js\";\nimport { getInitialLabels, getSuitesOfMochaTest, resolveParallelModeSetupFile } from \"./utils.js\";\n\nconst {\n  EVENT_SUITE_BEGIN,\n  EVENT_SUITE_END,\n  EVENT_TEST_BEGIN,\n  EVENT_TEST_END,\n  EVENT_TEST_PASS,\n  EVENT_TEST_FAIL,\n  EVENT_TEST_PENDING,\n  EVENT_HOOK_BEGIN,\n  EVENT_HOOK_END,\n} = Mocha.Runner.constants;\n\nexport class AllureMochaReporter extends Mocha.reporters.Base {\n  private readonly runtime: ReporterRuntime;\n\n  constructor(runner: Mocha.Runner, opts: Mocha.MochaOptions) {\n    super(runner, opts);\n\n    const { resultsDir = \"allure-results\", writer, ...restOptions }: Config = opts.reporterOptions || {};\n\n    this.runtime = new ReporterRuntime({\n      writer: writer || new FileSystemWriter({ resultsDir }),\n      ...restOptions,\n    });\n    const testRuntime = new MochaTestRuntime(this.runtime);\n\n    setGlobalTestRuntime(testRuntime);\n    setLegacyApiRuntime(this.runtime);\n\n    if (opts.parallel) {\n      opts.require = [...(opts.require ?? []), resolveParallelModeSetupFile()];\n    } else {\n      this.applyListeners();\n    }\n  }\n\n  private applyListeners = () => {\n    this.runner\n      .on(EVENT_SUITE_BEGIN, this.onSuite)\n      .on(EVENT_SUITE_END, this.onSuiteEnd)\n      .on(EVENT_TEST_BEGIN, this.onTest)\n      .on(EVENT_TEST_PASS, this.onPassed)\n      .on(EVENT_TEST_FAIL, this.onFailed)\n      .on(EVENT_TEST_PENDING, this.onPending)\n      .on(EVENT_TEST_END, this.onTestEnd)\n      .on(EVENT_HOOK_BEGIN, this.onHookStart)\n      .on(EVENT_HOOK_END, this.onHookEnd);\n  };\n\n  private onSuite = () => {\n    this.runtime.startScope();\n  };\n\n  private onSuiteEnd = () => {\n    this.runtime.writeScope();\n  };\n\n  private onTest = (test: Mocha.Test) => {\n    let fullName = \"\";\n    const globalLabels = getEnvironmentLabels().filter((label) => !!label.value);\n    const initialLabels: Label[] = getInitialLabels();\n    const labels = globalLabels.concat(initialLabels);\n\n    if (test.file) {\n      const testPath = getRelativePath(test.file);\n      fullName = `${testPath!}: `;\n      const packageLabelFromPath: Label = getPackageLabelFromPath(testPath);\n      labels.push(packageLabelFromPath);\n    }\n\n    fullName += test.titlePath().join(\" > \");\n\n    this.runtime.startTest(\n      {\n        name: test.title,\n        stage: Stage.RUNNING,\n        fullName,\n        labels,\n      },\n      { dedicatedScope: true },\n    );\n  };\n\n  private onPassed = () => {\n    this.runtime.updateTest((r) => {\n      r.status = Status.PASSED;\n    });\n  };\n\n  private onFailed = (_: Mocha.Test, error: Error) => {\n    this.runtime.updateTest((r) => {\n      r.status = getStatusFromError(error);\n      r.statusDetails = {\n        message: error.message,\n        trace: error.stack,\n      };\n    });\n  };\n\n  private onPending = (test: Mocha.Test) => {\n    this.onTest(test);\n    this.runtime.updateTest((r) => {\n      r.status = Status.SKIPPED;\n      r.statusDetails = {\n        message: \"Test skipped\",\n      };\n    });\n  };\n\n  private onTestEnd = (test: Mocha.Test) => {\n    const defaultSuites = getSuitesOfMochaTest(test);\n    this.runtime.updateTest((t) => {\n      ensureSuiteLabels(t, defaultSuites);\n      t.stage = Stage.FINISHED;\n    });\n    this.runtime.stopTest();\n    this.runtime.writeTest();\n  };\n\n  private onHookStart = (hook: Mocha.Hook) => {\n    const name = hook.originalTitle ?? \"\";\n    // eslint-disable-next-line @typescript-eslint/quotes\n    if (name.startsWith('\"before')) {\n      this.runtime.startFixture(\"before\", { name });\n      // eslint-disable-next-line @typescript-eslint/quotes\n    } else if (name.startsWith('\"after')) {\n      this.runtime.startFixture(\"after\", { name });\n    }\n  };\n\n  private onHookEnd = (hook: Mocha.Hook) => {\n    if (this.runtime.hasFixture()) {\n      this.runtime.updateFixture((r) => {\n        const error = hook.error();\n        if (error) {\n          r.status = getStatusFromError(error);\n          r.statusDetails = {\n            message: error.message,\n            trace: error.stack,\n          };\n        } else {\n          r.status = Status.PASSED;\n        }\n      });\n      this.runtime.stopFixture();\n    }\n  };\n}\n"],"mappings":"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","ignoreList":[]}