{"version":3,"file":"legacy.js","names":["_allureJsCommons","_interopRequireWildcard","require","commons","_sdk","_reporter","_legacyUtils","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","ownKeys","keys","getOwnPropertySymbols","o","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","value","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","LegacyAllureApi","constructor","epic","Promise","resolve","feature","story","name","suite","parentSuite","subSuite","label","options","parameter","serialize","url","type","link","issue","tms","markdown","description","html","descriptionHtml","owner","severity","layer","allureId","tag","info","_getLegacyApiRuntime","getLegacyApiRuntime","writer","writeEnvironmentInfo","categories","_getLegacyApiRuntime2","writeCategoriesDefinitions","content","attachment","contentType","runtime","currentTest","getCurrentTest","opts","writeAttachment","Buffer","from","uuid","status","step","_getLegacyApiRuntime3","updateStep","s","body","applyRuntimeMessages","data","start","Date","now","result","renameStep","addStepParameter","isPromise","promise","then","v","stopStepSuccess","catch","stopStepWithError","_getLegacyApiRuntime4","_getLegacyApiRuntime5","parameters","_getLegacyApiRuntime6","Status","PASSED","stage","Stage","FINISHED","stop","error","_getLegacyApiRuntime7","message","stack","getStatusFromError","statusDetails","trace","allure","exports"],"sources":["../../src/legacy.ts"],"sourcesContent":["import * as commons from \"allure-js-commons\";\nimport type { ContentType, ParameterOptions } from \"allure-js-commons\";\nimport { Stage, Status } from \"allure-js-commons\";\nimport type { Category } from \"allure-js-commons/sdk\";\nimport { getStatusFromError, isPromise } from \"allure-js-commons/sdk\";\nimport { serialize } from \"allure-js-commons/sdk/reporter\";\nimport { getLegacyApiRuntime } from \"./legacyUtils.js\";\n\ninterface StepInterface {\n  parameter(name: string, value: string): void;\n\n  name(name: string): void;\n}\n\ninterface AttachmentOptions {\n  contentType: ContentType | string;\n  fileExtension?: string;\n}\n\n/**\n * @deprecated please use api exported by \"allure-js-commons\" instead.\n */\nclass LegacyAllureApi {\n  /**\n   * @deprecated please use import { epic } from \"allure-js-commons\" instead.\n   */\n  epic = (epic: string) => Promise.resolve(commons.epic(epic));\n  /**\n   * @deprecated please use import { feature } from \"allure-js-commons\" instead.\n   */\n  feature = (feature: string) => Promise.resolve(commons.feature(feature));\n  /**\n   * @deprecated please use import { story } from \"allure-js-commons\" instead.\n   */\n  story = (story: string) => Promise.resolve(commons.story(story));\n  /**\n   * @deprecated please use import { suite } from \"allure-js-commons\" instead.\n   */\n  suite = (name: string) => Promise.resolve(commons.suite(name));\n  /**\n   * @deprecated please use import { parentSuite } from \"allure-js-commons\" instead.\n   */\n  parentSuite = (name: string) => Promise.resolve(commons.parentSuite(name));\n  /**\n   * @deprecated please use import { subSuite } from \"allure-js-commons\" instead.\n   */\n  subSuite = (name: string) => Promise.resolve(commons.subSuite(name));\n  /**\n   * @deprecated please use import { label } from \"allure-js-commons\" instead.\n   */\n  label = (name: string, value: string) => Promise.resolve(commons.label(name, value));\n  /**\n   * @deprecated please use import { parameter } from \"allure-js-commons\" instead.\n   */\n  parameter = (name: string, value: any, options?: ParameterOptions) =>\n    Promise.resolve(commons.parameter(name, serialize(value) as string, options));\n  /**\n   * @deprecated please use import { link } from \"allure-js-commons\" instead.\n   */\n  link = (url: string, name?: string, type?: string) => Promise.resolve(commons.link(url, name, type));\n  /**\n   * @deprecated please use import { issue } from \"allure-js-commons\" instead.\n   */\n  issue = (name: string, url: string) => Promise.resolve(commons.issue(url, name));\n  /**\n   * @deprecated please use import { tms } from \"allure-js-commons\" instead.\n   */\n  tms = (name: string, url: string) => Promise.resolve(commons.tms(url, name));\n  /**\n   * @deprecated please use import { description } from \"allure-js-commons\" instead.\n   */\n  description = (markdown: string) => Promise.resolve(commons.description(markdown));\n  /**\n   * @deprecated please use import { descriptionHtml } from \"allure-js-commons\" instead.\n   */\n  descriptionHtml = (html: string) => Promise.resolve(commons.descriptionHtml(html));\n  /**\n   * @deprecated please use import { owner } from \"allure-js-commons\" instead.\n   */\n  owner = (owner: string) => Promise.resolve(commons.owner(owner));\n  /**\n   * @deprecated please use import { severity } from \"allure-js-commons\" instead.\n   */\n  severity = (severity: string) => Promise.resolve(commons.severity(severity));\n  /**\n   * @deprecated please use import { layer } from \"allure-js-commons\" instead.\n   */\n  layer = (layer: string) => Promise.resolve(commons.layer(layer));\n  /**\n   * @deprecated please use import { allureId } from \"allure-js-commons\" instead.\n   */\n  id = (allureId: string) => Promise.resolve(commons.allureId(allureId));\n  /**\n   * @deprecated please use import { tag } from \"allure-js-commons\" instead.\n   */\n  tag = (tag: string) => Promise.resolve(commons.tag(tag));\n  /**\n   * @deprecated please use the `environmentInfo` config option instead.\n   */\n  writeEnvironmentInfo = (info: Record<string, string>) => {\n    getLegacyApiRuntime()?.writer.writeEnvironmentInfo(info);\n  };\n  /**\n   * @deprecated please use the `categories` config option instead.\n   */\n  writeCategoriesDefinitions = (categories: Category[]) => {\n    getLegacyApiRuntime()?.writer.writeCategoriesDefinitions(categories);\n  };\n  /**\n   * @deprecated please use import { attachment } from \"allure-js-commons\" instead.\n   */\n  attachment = (name: string, content: Buffer | string, options: ContentType | string | AttachmentOptions) =>\n    Promise.resolve(\n      commons.attachment(name, content, typeof options === \"string\" ? { contentType: options } : options),\n    );\n  /**\n   * @deprecated please use import { attachment } from \"allure-js-commons\" instead.\n   */\n  testAttachment = (name: string, content: Buffer | string, options: ContentType | string | AttachmentOptions) => {\n    const runtime = getLegacyApiRuntime();\n    const currentTest = runtime?.getCurrentTest();\n    if (currentTest) {\n      const opts: AttachmentOptions = typeof options === \"string\" ? { contentType: options } : { ...options };\n      runtime?.writeAttachment(\n        name,\n        Buffer.from(content),\n        {\n          ...opts,\n        },\n        currentTest.uuid,\n      );\n    }\n  };\n  /**\n   * @deprecated please use import { step } from \"allure-js-commons\" instead.\n   */\n  logStep = (name: string, status?: Status) => {\n    this.step(name, () => {\n      getLegacyApiRuntime()?.updateStep((s) => (s.status = status));\n    });\n  };\n\n  // It's sync-first. That's why we can't simply reuse commons.step.\n  /**\n   * @deprecated please use import { step } from \"allure-js-commons\" instead.\n   */\n  step = <T>(name: string, body: (step: StepInterface) => T): T => {\n    const runtime = getLegacyApiRuntime();\n    runtime?.applyRuntimeMessages([\n      {\n        type: \"step_start\",\n        data: {\n          name,\n          start: Date.now(),\n        },\n      },\n    ]);\n    try {\n      const result = body({\n        name: this.renameStep,\n        parameter: this.addStepParameter,\n      });\n      if (isPromise(result)) {\n        const promise = result as Promise<any>;\n        return promise\n          .then((v) => {\n            this.stopStepSuccess();\n            return v;\n          })\n          .catch((e) => {\n            this.stopStepWithError(e);\n            throw e;\n          }) as T;\n      }\n      this.stopStepSuccess();\n      return result;\n    } catch (e) {\n      this.stopStepWithError(e);\n      throw e;\n    }\n  };\n\n  private renameStep = (name: string) => {\n    getLegacyApiRuntime()?.applyRuntimeMessages([\n      {\n        type: \"step_metadata\",\n        data: { name },\n      },\n    ]);\n  };\n\n  private addStepParameter = (name: string, value: string) => {\n    getLegacyApiRuntime()?.applyRuntimeMessages([\n      {\n        type: \"step_metadata\",\n        data: {\n          parameters: [{ name, value }],\n        },\n      },\n    ]);\n  };\n\n  private stopStepSuccess = () => {\n    getLegacyApiRuntime()?.applyRuntimeMessages([\n      {\n        type: \"step_stop\",\n        data: {\n          status: Status.PASSED,\n          stage: Stage.FINISHED,\n          stop: Date.now(),\n        },\n      },\n    ]);\n  };\n\n  private stopStepWithError = (error: unknown) => {\n    const { message, stack } = error as Error;\n    getLegacyApiRuntime()?.applyRuntimeMessages([\n      {\n        type: \"step_stop\",\n        data: {\n          status: getStatusFromError(error as Error),\n          stage: Stage.FINISHED,\n          stop: Date.now(),\n          statusDetails: {\n            message,\n            trace: stack,\n          },\n        },\n      },\n    ]);\n  };\n}\n\nexport const allure = new LegacyAllureApi();\n"],"mappings":"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","ignoreList":[]}