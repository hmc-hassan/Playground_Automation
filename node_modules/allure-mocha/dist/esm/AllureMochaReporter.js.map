{"version":3,"file":"AllureMochaReporter.js","names":["Mocha","Stage","Status","getStatusFromError","FileSystemWriter","ReporterRuntime","ensureSuiteLabels","getEnvironmentLabels","getPackageLabelFromPath","getRelativePath","setGlobalTestRuntime","MochaTestRuntime","setLegacyApiRuntime","getInitialLabels","getSuitesOfMochaTest","resolveParallelModeSetupFile","EVENT_SUITE_BEGIN","EVENT_SUITE_END","EVENT_TEST_BEGIN","EVENT_TEST_END","EVENT_TEST_PASS","EVENT_TEST_FAIL","EVENT_TEST_PENDING","EVENT_HOOK_BEGIN","EVENT_HOOK_END","Runner","constants","AllureMochaReporter","reporters","Base","constructor","runner","opts","_defineProperty","on","onSuite","onSuiteEnd","onTest","onPassed","onFailed","onPending","onTestEnd","onHookStart","onHookEnd","runtime","startScope","writeScope","test","fullName","globalLabels","filter","label","value","initialLabels","labels","concat","file","testPath","packageLabelFromPath","push","titlePath","join","startTest","name","title","stage","RUNNING","dedicatedScope","updateTest","r","status","PASSED","_","error","statusDetails","message","trace","stack","SKIPPED","defaultSuites","t","FINISHED","stopTest","writeTest","hook","_hook$originalTitle","originalTitle","startsWith","startFixture","hasFixture","updateFixture","stopFixture","_ref","reporterOptions","resultsDir","writer","restOptions","_objectWithoutProperties","_excluded","_objectSpread","testRuntime","parallel","_opts$require","require","applyListeners"],"sources":["../../src/AllureMochaReporter.ts"],"sourcesContent":["import * as Mocha from \"mocha\";\nimport type { Label } from \"allure-js-commons\";\nimport { Stage, Status } from \"allure-js-commons\";\nimport { getStatusFromError } from \"allure-js-commons/sdk\";\nimport type { Config } from \"allure-js-commons/sdk/reporter\";\nimport {\n  FileSystemWriter,\n  ReporterRuntime,\n  ensureSuiteLabels,\n  getEnvironmentLabels,\n  getPackageLabelFromPath,\n  getRelativePath,\n} from \"allure-js-commons/sdk/reporter\";\nimport { setGlobalTestRuntime } from \"allure-js-commons/sdk/runtime\";\nimport { MochaTestRuntime } from \"./MochaTestRuntime.js\";\nimport { setLegacyApiRuntime } from \"./legacyUtils.js\";\nimport { getInitialLabels, getSuitesOfMochaTest, resolveParallelModeSetupFile } from \"./utils.js\";\n\nconst {\n  EVENT_SUITE_BEGIN,\n  EVENT_SUITE_END,\n  EVENT_TEST_BEGIN,\n  EVENT_TEST_END,\n  EVENT_TEST_PASS,\n  EVENT_TEST_FAIL,\n  EVENT_TEST_PENDING,\n  EVENT_HOOK_BEGIN,\n  EVENT_HOOK_END,\n} = Mocha.Runner.constants;\n\nexport class AllureMochaReporter extends Mocha.reporters.Base {\n  private readonly runtime: ReporterRuntime;\n\n  constructor(runner: Mocha.Runner, opts: Mocha.MochaOptions) {\n    super(runner, opts);\n\n    const { resultsDir = \"allure-results\", writer, ...restOptions }: Config = opts.reporterOptions || {};\n\n    this.runtime = new ReporterRuntime({\n      writer: writer || new FileSystemWriter({ resultsDir }),\n      ...restOptions,\n    });\n    const testRuntime = new MochaTestRuntime(this.runtime);\n\n    setGlobalTestRuntime(testRuntime);\n    setLegacyApiRuntime(this.runtime);\n\n    if (opts.parallel) {\n      opts.require = [...(opts.require ?? []), resolveParallelModeSetupFile()];\n    } else {\n      this.applyListeners();\n    }\n  }\n\n  private applyListeners = () => {\n    this.runner\n      .on(EVENT_SUITE_BEGIN, this.onSuite)\n      .on(EVENT_SUITE_END, this.onSuiteEnd)\n      .on(EVENT_TEST_BEGIN, this.onTest)\n      .on(EVENT_TEST_PASS, this.onPassed)\n      .on(EVENT_TEST_FAIL, this.onFailed)\n      .on(EVENT_TEST_PENDING, this.onPending)\n      .on(EVENT_TEST_END, this.onTestEnd)\n      .on(EVENT_HOOK_BEGIN, this.onHookStart)\n      .on(EVENT_HOOK_END, this.onHookEnd);\n  };\n\n  private onSuite = () => {\n    this.runtime.startScope();\n  };\n\n  private onSuiteEnd = () => {\n    this.runtime.writeScope();\n  };\n\n  private onTest = (test: Mocha.Test) => {\n    let fullName = \"\";\n    const globalLabels = getEnvironmentLabels().filter((label) => !!label.value);\n    const initialLabels: Label[] = getInitialLabels();\n    const labels = globalLabels.concat(initialLabels);\n\n    if (test.file) {\n      const testPath = getRelativePath(test.file);\n      fullName = `${testPath!}: `;\n      const packageLabelFromPath: Label = getPackageLabelFromPath(testPath);\n      labels.push(packageLabelFromPath);\n    }\n\n    fullName += test.titlePath().join(\" > \");\n\n    this.runtime.startTest(\n      {\n        name: test.title,\n        stage: Stage.RUNNING,\n        fullName,\n        labels,\n      },\n      { dedicatedScope: true },\n    );\n  };\n\n  private onPassed = () => {\n    this.runtime.updateTest((r) => {\n      r.status = Status.PASSED;\n    });\n  };\n\n  private onFailed = (_: Mocha.Test, error: Error) => {\n    this.runtime.updateTest((r) => {\n      r.status = getStatusFromError(error);\n      r.statusDetails = {\n        message: error.message,\n        trace: error.stack,\n      };\n    });\n  };\n\n  private onPending = (test: Mocha.Test) => {\n    this.onTest(test);\n    this.runtime.updateTest((r) => {\n      r.status = Status.SKIPPED;\n      r.statusDetails = {\n        message: \"Test skipped\",\n      };\n    });\n  };\n\n  private onTestEnd = (test: Mocha.Test) => {\n    const defaultSuites = getSuitesOfMochaTest(test);\n    this.runtime.updateTest((t) => {\n      ensureSuiteLabels(t, defaultSuites);\n      t.stage = Stage.FINISHED;\n    });\n    this.runtime.stopTest();\n    this.runtime.writeTest();\n  };\n\n  private onHookStart = (hook: Mocha.Hook) => {\n    const name = hook.originalTitle ?? \"\";\n    // eslint-disable-next-line @typescript-eslint/quotes\n    if (name.startsWith('\"before')) {\n      this.runtime.startFixture(\"before\", { name });\n      // eslint-disable-next-line @typescript-eslint/quotes\n    } else if (name.startsWith('\"after')) {\n      this.runtime.startFixture(\"after\", { name });\n    }\n  };\n\n  private onHookEnd = (hook: Mocha.Hook) => {\n    if (this.runtime.hasFixture()) {\n      this.runtime.updateFixture((r) => {\n        const error = hook.error();\n        if (error) {\n          r.status = getStatusFromError(error);\n          r.statusDetails = {\n            message: error.message,\n            trace: error.stack,\n          };\n        } else {\n          r.status = Status.PASSED;\n        }\n      });\n      this.runtime.stopFixture();\n    }\n  };\n}\n"],"mappings":"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","ignoreList":[]}