{"version":3,"file":"legacy.js","names":["commons","Stage","Status","getStatusFromError","isPromise","serialize","getLegacyApiRuntime","LegacyAllureApi","constructor","_defineProperty","epic","Promise","resolve","feature","story","name","suite","parentSuite","subSuite","value","label","options","parameter","url","type","link","issue","tms","markdown","description","html","descriptionHtml","owner","severity","layer","allureId","tag","info","_getLegacyApiRuntime","writer","writeEnvironmentInfo","categories","_getLegacyApiRuntime2","writeCategoriesDefinitions","content","attachment","contentType","runtime","currentTest","getCurrentTest","opts","_objectSpread","writeAttachment","Buffer","from","uuid","status","step","_getLegacyApiRuntime3","updateStep","s","body","applyRuntimeMessages","data","start","Date","now","result","renameStep","addStepParameter","promise","then","v","stopStepSuccess","catch","e","stopStepWithError","_getLegacyApiRuntime4","_getLegacyApiRuntime5","parameters","_getLegacyApiRuntime6","PASSED","stage","FINISHED","stop","error","_getLegacyApiRuntime7","message","stack","statusDetails","trace","allure"],"sources":["../../src/legacy.ts"],"sourcesContent":["import * as commons from \"allure-js-commons\";\nimport type { ContentType, ParameterOptions } from \"allure-js-commons\";\nimport { Stage, Status } from \"allure-js-commons\";\nimport type { Category } from \"allure-js-commons/sdk\";\nimport { getStatusFromError, isPromise } from \"allure-js-commons/sdk\";\nimport { serialize } from \"allure-js-commons/sdk/reporter\";\nimport { getLegacyApiRuntime } from \"./legacyUtils.js\";\n\ninterface StepInterface {\n  parameter(name: string, value: string): void;\n\n  name(name: string): void;\n}\n\ninterface AttachmentOptions {\n  contentType: ContentType | string;\n  fileExtension?: string;\n}\n\n/**\n * @deprecated please use api exported by \"allure-js-commons\" instead.\n */\nclass LegacyAllureApi {\n  /**\n   * @deprecated please use import { epic } from \"allure-js-commons\" instead.\n   */\n  epic = (epic: string) => Promise.resolve(commons.epic(epic));\n  /**\n   * @deprecated please use import { feature } from \"allure-js-commons\" instead.\n   */\n  feature = (feature: string) => Promise.resolve(commons.feature(feature));\n  /**\n   * @deprecated please use import { story } from \"allure-js-commons\" instead.\n   */\n  story = (story: string) => Promise.resolve(commons.story(story));\n  /**\n   * @deprecated please use import { suite } from \"allure-js-commons\" instead.\n   */\n  suite = (name: string) => Promise.resolve(commons.suite(name));\n  /**\n   * @deprecated please use import { parentSuite } from \"allure-js-commons\" instead.\n   */\n  parentSuite = (name: string) => Promise.resolve(commons.parentSuite(name));\n  /**\n   * @deprecated please use import { subSuite } from \"allure-js-commons\" instead.\n   */\n  subSuite = (name: string) => Promise.resolve(commons.subSuite(name));\n  /**\n   * @deprecated please use import { label } from \"allure-js-commons\" instead.\n   */\n  label = (name: string, value: string) => Promise.resolve(commons.label(name, value));\n  /**\n   * @deprecated please use import { parameter } from \"allure-js-commons\" instead.\n   */\n  parameter = (name: string, value: any, options?: ParameterOptions) =>\n    Promise.resolve(commons.parameter(name, serialize(value) as string, options));\n  /**\n   * @deprecated please use import { link } from \"allure-js-commons\" instead.\n   */\n  link = (url: string, name?: string, type?: string) => Promise.resolve(commons.link(url, name, type));\n  /**\n   * @deprecated please use import { issue } from \"allure-js-commons\" instead.\n   */\n  issue = (name: string, url: string) => Promise.resolve(commons.issue(url, name));\n  /**\n   * @deprecated please use import { tms } from \"allure-js-commons\" instead.\n   */\n  tms = (name: string, url: string) => Promise.resolve(commons.tms(url, name));\n  /**\n   * @deprecated please use import { description } from \"allure-js-commons\" instead.\n   */\n  description = (markdown: string) => Promise.resolve(commons.description(markdown));\n  /**\n   * @deprecated please use import { descriptionHtml } from \"allure-js-commons\" instead.\n   */\n  descriptionHtml = (html: string) => Promise.resolve(commons.descriptionHtml(html));\n  /**\n   * @deprecated please use import { owner } from \"allure-js-commons\" instead.\n   */\n  owner = (owner: string) => Promise.resolve(commons.owner(owner));\n  /**\n   * @deprecated please use import { severity } from \"allure-js-commons\" instead.\n   */\n  severity = (severity: string) => Promise.resolve(commons.severity(severity));\n  /**\n   * @deprecated please use import { layer } from \"allure-js-commons\" instead.\n   */\n  layer = (layer: string) => Promise.resolve(commons.layer(layer));\n  /**\n   * @deprecated please use import { allureId } from \"allure-js-commons\" instead.\n   */\n  id = (allureId: string) => Promise.resolve(commons.allureId(allureId));\n  /**\n   * @deprecated please use import { tag } from \"allure-js-commons\" instead.\n   */\n  tag = (tag: string) => Promise.resolve(commons.tag(tag));\n  /**\n   * @deprecated please use the `environmentInfo` config option instead.\n   */\n  writeEnvironmentInfo = (info: Record<string, string>) => {\n    getLegacyApiRuntime()?.writer.writeEnvironmentInfo(info);\n  };\n  /**\n   * @deprecated please use the `categories` config option instead.\n   */\n  writeCategoriesDefinitions = (categories: Category[]) => {\n    getLegacyApiRuntime()?.writer.writeCategoriesDefinitions(categories);\n  };\n  /**\n   * @deprecated please use import { attachment } from \"allure-js-commons\" instead.\n   */\n  attachment = (name: string, content: Buffer | string, options: ContentType | string | AttachmentOptions) =>\n    Promise.resolve(\n      commons.attachment(name, content, typeof options === \"string\" ? { contentType: options } : options),\n    );\n  /**\n   * @deprecated please use import { attachment } from \"allure-js-commons\" instead.\n   */\n  testAttachment = (name: string, content: Buffer | string, options: ContentType | string | AttachmentOptions) => {\n    const runtime = getLegacyApiRuntime();\n    const currentTest = runtime?.getCurrentTest();\n    if (currentTest) {\n      const opts: AttachmentOptions = typeof options === \"string\" ? { contentType: options } : { ...options };\n      runtime?.writeAttachment(\n        name,\n        Buffer.from(content),\n        {\n          ...opts,\n        },\n        currentTest.uuid,\n      );\n    }\n  };\n  /**\n   * @deprecated please use import { step } from \"allure-js-commons\" instead.\n   */\n  logStep = (name: string, status?: Status) => {\n    this.step(name, () => {\n      getLegacyApiRuntime()?.updateStep((s) => (s.status = status));\n    });\n  };\n\n  // It's sync-first. That's why we can't simply reuse commons.step.\n  /**\n   * @deprecated please use import { step } from \"allure-js-commons\" instead.\n   */\n  step = <T>(name: string, body: (step: StepInterface) => T): T => {\n    const runtime = getLegacyApiRuntime();\n    runtime?.applyRuntimeMessages([\n      {\n        type: \"step_start\",\n        data: {\n          name,\n          start: Date.now(),\n        },\n      },\n    ]);\n    try {\n      const result = body({\n        name: this.renameStep,\n        parameter: this.addStepParameter,\n      });\n      if (isPromise(result)) {\n        const promise = result as Promise<any>;\n        return promise\n          .then((v) => {\n            this.stopStepSuccess();\n            return v;\n          })\n          .catch((e) => {\n            this.stopStepWithError(e);\n            throw e;\n          }) as T;\n      }\n      this.stopStepSuccess();\n      return result;\n    } catch (e) {\n      this.stopStepWithError(e);\n      throw e;\n    }\n  };\n\n  private renameStep = (name: string) => {\n    getLegacyApiRuntime()?.applyRuntimeMessages([\n      {\n        type: \"step_metadata\",\n        data: { name },\n      },\n    ]);\n  };\n\n  private addStepParameter = (name: string, value: string) => {\n    getLegacyApiRuntime()?.applyRuntimeMessages([\n      {\n        type: \"step_metadata\",\n        data: {\n          parameters: [{ name, value }],\n        },\n      },\n    ]);\n  };\n\n  private stopStepSuccess = () => {\n    getLegacyApiRuntime()?.applyRuntimeMessages([\n      {\n        type: \"step_stop\",\n        data: {\n          status: Status.PASSED,\n          stage: Stage.FINISHED,\n          stop: Date.now(),\n        },\n      },\n    ]);\n  };\n\n  private stopStepWithError = (error: unknown) => {\n    const { message, stack } = error as Error;\n    getLegacyApiRuntime()?.applyRuntimeMessages([\n      {\n        type: \"step_stop\",\n        data: {\n          status: getStatusFromError(error as Error),\n          stage: Stage.FINISHED,\n          stop: Date.now(),\n          statusDetails: {\n            message,\n            trace: stack,\n          },\n        },\n      },\n    ]);\n  };\n}\n\nexport const allure = new LegacyAllureApi();\n"],"mappings":";;;;;AAAA,OAAO,KAAKA,OAAO,MAAM,mBAAmB;AAE5C,SAASC,KAAK,EAAEC,MAAM,QAAQ,mBAAmB;AAEjD,SAASC,kBAAkB,EAAEC,SAAS,QAAQ,uBAAuB;AACrE,SAASC,SAAS,QAAQ,gCAAgC;AAC1D,SAASC,mBAAmB,QAAQ,kBAAkB;AAatD;AACA;AACA;AACA,MAAMC,eAAe,CAAC;EAAAC,YAAA;IACpB;AACF;AACA;IAFEC,eAAA,eAGQC,IAAY,IAAKC,OAAO,CAACC,OAAO,CAACZ,OAAO,CAACU,IAAI,CAACA,IAAI,CAAC,CAAC;IAC5D;AACF;AACA;IAFED,eAAA,kBAGWI,OAAe,IAAKF,OAAO,CAACC,OAAO,CAACZ,OAAO,CAACa,OAAO,CAACA,OAAO,CAAC,CAAC;IACxE;AACF;AACA;IAFEJ,eAAA,gBAGSK,KAAa,IAAKH,OAAO,CAACC,OAAO,CAACZ,OAAO,CAACc,KAAK,CAACA,KAAK,CAAC,CAAC;IAChE;AACF;AACA;IAFEL,eAAA,gBAGSM,IAAY,IAAKJ,OAAO,CAACC,OAAO,CAACZ,OAAO,CAACgB,KAAK,CAACD,IAAI,CAAC,CAAC;IAC9D;AACF;AACA;IAFEN,eAAA,sBAGeM,IAAY,IAAKJ,OAAO,CAACC,OAAO,CAACZ,OAAO,CAACiB,WAAW,CAACF,IAAI,CAAC,CAAC;IAC1E;AACF;AACA;IAFEN,eAAA,mBAGYM,IAAY,IAAKJ,OAAO,CAACC,OAAO,CAACZ,OAAO,CAACkB,QAAQ,CAACH,IAAI,CAAC,CAAC;IACpE;AACF;AACA;IAFEN,eAAA,gBAGQ,CAACM,IAAY,EAAEI,KAAa,KAAKR,OAAO,CAACC,OAAO,CAACZ,OAAO,CAACoB,KAAK,CAACL,IAAI,EAAEI,KAAK,CAAC,CAAC;IACpF;AACF;AACA;IAFEV,eAAA,oBAGY,CAACM,IAAY,EAAEI,KAAU,EAAEE,OAA0B,KAC/DV,OAAO,CAACC,OAAO,CAACZ,OAAO,CAACsB,SAAS,CAACP,IAAI,EAAEV,SAAS,CAACc,KAAK,CAAC,EAAYE,OAAO,CAAC,CAAC;IAC/E;AACF;AACA;IAFEZ,eAAA,eAGO,CAACc,GAAW,EAAER,IAAa,EAAES,IAAa,KAAKb,OAAO,CAACC,OAAO,CAACZ,OAAO,CAACyB,IAAI,CAACF,GAAG,EAAER,IAAI,EAAES,IAAI,CAAC,CAAC;IACpG;AACF;AACA;IAFEf,eAAA,gBAGQ,CAACM,IAAY,EAAEQ,GAAW,KAAKZ,OAAO,CAACC,OAAO,CAACZ,OAAO,CAAC0B,KAAK,CAACH,GAAG,EAAER,IAAI,CAAC,CAAC;IAChF;AACF;AACA;IAFEN,eAAA,cAGM,CAACM,IAAY,EAAEQ,GAAW,KAAKZ,OAAO,CAACC,OAAO,CAACZ,OAAO,CAAC2B,GAAG,CAACJ,GAAG,EAAER,IAAI,CAAC,CAAC;IAC5E;AACF;AACA;IAFEN,eAAA,sBAGemB,QAAgB,IAAKjB,OAAO,CAACC,OAAO,CAACZ,OAAO,CAAC6B,WAAW,CAACD,QAAQ,CAAC,CAAC;IAClF;AACF;AACA;IAFEnB,eAAA,0BAGmBqB,IAAY,IAAKnB,OAAO,CAACC,OAAO,CAACZ,OAAO,CAAC+B,eAAe,CAACD,IAAI,CAAC,CAAC;IAClF;AACF;AACA;IAFErB,eAAA,gBAGSuB,KAAa,IAAKrB,OAAO,CAACC,OAAO,CAACZ,OAAO,CAACgC,KAAK,CAACA,KAAK,CAAC,CAAC;IAChE;AACF;AACA;IAFEvB,eAAA,mBAGYwB,QAAgB,IAAKtB,OAAO,CAACC,OAAO,CAACZ,OAAO,CAACiC,QAAQ,CAACA,QAAQ,CAAC,CAAC;IAC5E;AACF;AACA;IAFExB,eAAA,gBAGSyB,KAAa,IAAKvB,OAAO,CAACC,OAAO,CAACZ,OAAO,CAACkC,KAAK,CAACA,KAAK,CAAC,CAAC;IAChE;AACF;AACA;IAFEzB,eAAA,aAGM0B,QAAgB,IAAKxB,OAAO,CAACC,OAAO,CAACZ,OAAO,CAACmC,QAAQ,CAACA,QAAQ,CAAC,CAAC;IACtE;AACF;AACA;IAFE1B,eAAA,cAGO2B,GAAW,IAAKzB,OAAO,CAACC,OAAO,CAACZ,OAAO,CAACoC,GAAG,CAACA,GAAG,CAAC,CAAC;IACxD;AACF;AACA;IAFE3B,eAAA,+BAGwB4B,IAA4B,IAAK;MAAA,IAAAC,oBAAA;MACvD,CAAAA,oBAAA,GAAAhC,mBAAmB,CAAC,CAAC,cAAAgC,oBAAA,eAArBA,oBAAA,CAAuBC,MAAM,CAACC,oBAAoB,CAACH,IAAI,CAAC;IAC1D,CAAC;IACD;AACF;AACA;IAFE5B,eAAA,qCAG8BgC,UAAsB,IAAK;MAAA,IAAAC,qBAAA;MACvD,CAAAA,qBAAA,GAAApC,mBAAmB,CAAC,CAAC,cAAAoC,qBAAA,eAArBA,qBAAA,CAAuBH,MAAM,CAACI,0BAA0B,CAACF,UAAU,CAAC;IACtE,CAAC;IACD;AACF;AACA;IAFEhC,eAAA,qBAGa,CAACM,IAAY,EAAE6B,OAAwB,EAAEvB,OAAiD,KACrGV,OAAO,CAACC,OAAO,CACbZ,OAAO,CAAC6C,UAAU,CAAC9B,IAAI,EAAE6B,OAAO,EAAE,OAAOvB,OAAO,KAAK,QAAQ,GAAG;MAAEyB,WAAW,EAAEzB;IAAQ,CAAC,GAAGA,OAAO,CACpG,CAAC;IACH;AACF;AACA;IAFEZ,eAAA,yBAGiB,CAACM,IAAY,EAAE6B,OAAwB,EAAEvB,OAAiD,KAAK;MAC9G,IAAM0B,OAAO,GAAGzC,mBAAmB,CAAC,CAAC;MACrC,IAAM0C,WAAW,GAAGD,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEE,cAAc,CAAC,CAAC;MAC7C,IAAID,WAAW,EAAE;QACf,IAAME,IAAuB,GAAG,OAAO7B,OAAO,KAAK,QAAQ,GAAG;UAAEyB,WAAW,EAAEzB;QAAQ,CAAC,GAAA8B,aAAA,KAAQ9B,OAAO,CAAE;QACvG0B,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEK,eAAe,CACtBrC,IAAI,EACJsC,MAAM,CAACC,IAAI,CAACV,OAAO,CAAC,EAAAO,aAAA,KAEfD,IAAI,GAETF,WAAW,CAACO,IACd,CAAC;MACH;IACF,CAAC;IACD;AACF;AACA;IAFE9C,eAAA,kBAGU,CAACM,IAAY,EAAEyC,MAAe,KAAK;MAC3C,IAAI,CAACC,IAAI,CAAC1C,IAAI,EAAE,MAAM;QAAA,IAAA2C,qBAAA;QACpB,CAAAA,qBAAA,GAAApD,mBAAmB,CAAC,CAAC,cAAAoD,qBAAA,eAArBA,qBAAA,CAAuBC,UAAU,CAAEC,CAAC,IAAMA,CAAC,CAACJ,MAAM,GAAGA,MAAO,CAAC;MAC/D,CAAC,CAAC;IACJ,CAAC;IAED;IACA;AACF;AACA;IAFE/C,eAAA,eAGO,CAAIM,IAAY,EAAE8C,IAAgC,KAAQ;MAC/D,IAAMd,OAAO,GAAGzC,mBAAmB,CAAC,CAAC;MACrCyC,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEe,oBAAoB,CAAC,CAC5B;QACEtC,IAAI,EAAE,YAAY;QAClBuC,IAAI,EAAE;UACJhD,IAAI;UACJiD,KAAK,EAAEC,IAAI,CAACC,GAAG,CAAC;QAClB;MACF,CAAC,CACF,CAAC;MACF,IAAI;QACF,IAAMC,MAAM,GAAGN,IAAI,CAAC;UAClB9C,IAAI,EAAE,IAAI,CAACqD,UAAU;UACrB9C,SAAS,EAAE,IAAI,CAAC+C;QAClB,CAAC,CAAC;QACF,IAAIjE,SAAS,CAAC+D,MAAM,CAAC,EAAE;UACrB,IAAMG,OAAO,GAAGH,MAAsB;UACtC,OAAOG,OAAO,CACXC,IAAI,CAAEC,CAAC,IAAK;YACX,IAAI,CAACC,eAAe,CAAC,CAAC;YACtB,OAAOD,CAAC;UACV,CAAC,CAAC,CACDE,KAAK,CAAEC,CAAC,IAAK;YACZ,IAAI,CAACC,iBAAiB,CAACD,CAAC,CAAC;YACzB,MAAMA,CAAC;UACT,CAAC,CAAC;QACN;QACA,IAAI,CAACF,eAAe,CAAC,CAAC;QACtB,OAAON,MAAM;MACf,CAAC,CAAC,OAAOQ,CAAC,EAAE;QACV,IAAI,CAACC,iBAAiB,CAACD,CAAC,CAAC;QACzB,MAAMA,CAAC;MACT;IACF,CAAC;IAAAlE,eAAA,qBAEqBM,IAAY,IAAK;MAAA,IAAA8D,qBAAA;MACrC,CAAAA,qBAAA,GAAAvE,mBAAmB,CAAC,CAAC,cAAAuE,qBAAA,eAArBA,qBAAA,CAAuBf,oBAAoB,CAAC,CAC1C;QACEtC,IAAI,EAAE,eAAe;QACrBuC,IAAI,EAAE;UAAEhD;QAAK;MACf,CAAC,CACF,CAAC;IACJ,CAAC;IAAAN,eAAA,2BAE0B,CAACM,IAAY,EAAEI,KAAa,KAAK;MAAA,IAAA2D,qBAAA;MAC1D,CAAAA,qBAAA,GAAAxE,mBAAmB,CAAC,CAAC,cAAAwE,qBAAA,eAArBA,qBAAA,CAAuBhB,oBAAoB,CAAC,CAC1C;QACEtC,IAAI,EAAE,eAAe;QACrBuC,IAAI,EAAE;UACJgB,UAAU,EAAE,CAAC;YAAEhE,IAAI;YAAEI;UAAM,CAAC;QAC9B;MACF,CAAC,CACF,CAAC;IACJ,CAAC;IAAAV,eAAA,0BAEyB,MAAM;MAAA,IAAAuE,qBAAA;MAC9B,CAAAA,qBAAA,GAAA1E,mBAAmB,CAAC,CAAC,cAAA0E,qBAAA,eAArBA,qBAAA,CAAuBlB,oBAAoB,CAAC,CAC1C;QACEtC,IAAI,EAAE,WAAW;QACjBuC,IAAI,EAAE;UACJP,MAAM,EAAEtD,MAAM,CAAC+E,MAAM;UACrBC,KAAK,EAAEjF,KAAK,CAACkF,QAAQ;UACrBC,IAAI,EAAEnB,IAAI,CAACC,GAAG,CAAC;QACjB;MACF,CAAC,CACF,CAAC;IACJ,CAAC;IAAAzD,eAAA,4BAE4B4E,KAAc,IAAK;MAAA,IAAAC,qBAAA;MAC9C,IAAM;QAAEC,OAAO;QAAEC;MAAM,CAAC,GAAGH,KAAc;MACzC,CAAAC,qBAAA,GAAAhF,mBAAmB,CAAC,CAAC,cAAAgF,qBAAA,eAArBA,qBAAA,CAAuBxB,oBAAoB,CAAC,CAC1C;QACEtC,IAAI,EAAE,WAAW;QACjBuC,IAAI,EAAE;UACJP,MAAM,EAAErD,kBAAkB,CAACkF,KAAc,CAAC;UAC1CH,KAAK,EAAEjF,KAAK,CAACkF,QAAQ;UACrBC,IAAI,EAAEnB,IAAI,CAACC,GAAG,CAAC,CAAC;UAChBuB,aAAa,EAAE;YACbF,OAAO;YACPG,KAAK,EAAEF;UACT;QACF;MACF,CAAC,CACF,CAAC;IACJ,CAAC;EAAA;AACH;AAEA,OAAO,IAAMG,MAAM,GAAG,IAAIpF,eAAe,CAAC,CAAC","ignoreList":[]}